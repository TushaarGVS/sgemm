# Copyright (C) 2025, Tushaar Gangavarapu <TG352@cornell.edu>.
# All rights reserved.
# Distributed under the MIT License. See LICENSE for details.

CompileFlags:
  # Search `build` directory for `compile_commands.json`. Taken from:
  # https://github.com/neovim/neovim/blob/master/.clangd.
  CompilationDatabase: build/
  Remove:
    - -arch*
    - -Xcudafe*
    - -Xfatbin*
    - --options-file
    - -forward-unknown-to-host-compiler
    - --use_fast_math
    - --expt-extended-lambda
    - --expt-relaxed-constexpr
    - -gencode*
  Add:
    - -std=c++20
    # Change the CUDA path to the one used by the environment, as well as the GPU
    # architecture you're using. (Run `which nvcc` for the paths.)
    # See: https://github.com/clangd/vscode-clangd/issues/125.
    # Also, clangd doesn't support env variables, as noted in this issue:
    # https://github.com/clangd/clangd/issues/1827
    - --cuda-path=/dccstor/gma2/tg352/miniforge3/envs/sgemm-env/targets/x86_64-linux
    # To get the GPU architecture, run `nvidia-smi --query-gpu=compute_cap --format=csv`
    # and enter `sm_{<compute_cap>*10}` below.
    - --cuda-gpu-arch=sm_80
    - -L/dccstor/gma2/tg352/miniforge3/envs/sgemm-env/targets/x86_64-linux/lib
    - -I/dccstor/gma2/tg352/miniforge3/envs/sgemm-env/targets/x86_64-linux/include
    # FIXME: For `fmt` headers. For some reason, even though `compile_commands.json` has
    # the correct path, `clangd` still cannot find the headers.
    - -I../build/_deps/fmt-src/include
